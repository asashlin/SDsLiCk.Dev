Gramma,Gramma Definition,Object,Sequence,Alternate,Response,Action,,The header row -ignored,,,,,
FILE:,[UsingDir | NamespaceDec]*,UsingDir,UsingDir,NamespaceDec,Next,,,1st Line defaults to the Parser begin point,,,,,
,,NamespaceDec,UsingDir,&Empty,Next,,,GrammaRef implies a  'Call' instruction (Response),,,,,
,,&Empty,,,Accept,,,,,,,,
,,,,,,,,,TokenRef,,,,if(token.Type == TokenRef.Type.GrammaRef)
UsingDir:,"""using"" Namespace ';' => UsingDir $Namespace","""using""",Namespace,,Next,,,,Type,,,,push sequence
,,Namespace,';',,Next,,,,Value,,,,
,,';',,,Accept,UsingDir $Namespace,,,,,,,
,,,,,,,,,,,,,
NamespaceDec:,"""namespace"" QName { => Namespace $QName } NS_Block","""namespace""",QName,,Next,,,NSRec,,,,,
,,QName,NS_Block,,Next,Namespace $QName,,,TokenRef,,,,
,,NS_Block,,,Accept,,,,Sequence,,,,
,,,,,,,,,Alternate,,,,
NS_Block:,'{' ClassDec '}','{',ClassDec,,Next,,,,,,,,
,, ClassDec,'}',,Next,,,,,,,,
,,'}',,,Accept,,,,,,,,
,,,,,,,,,,,,,
ClassDec:,"Modifiers ObjType ""class"" QName { => Class  $QName $Modifiers { ?Empty = ""public"" } $ObjType} CL_Block",Modifiers,ObjType,,Next,,,,,,,,
,,ObjType,"""class""",,Next,,,,,,,,
,,class,QName,,Next,,,,,,,,
,,QName,Params,,Next,,,,,,,,
,,Params,CL_Block,,Next,"Class  $QName $Modifiers ?Empty = ""public"" $ObjType $Params",,,,,,,
,,CL_Block,,,Accept,,,,,,,,
,,,,,,,,,,,,,
CL_Block:,'{' [MethodDec | ... ?'}'  ]* '}','{',MethodDec,,Next,,,,,,,,
,,MethodDec,MethodDec,Unknown,Next,,,,,,,,
,,'}',,'}',Lookahead,,,".Unknown ('...') collects tokens until it find the terminating token ('}') in this case. This token is also defined as a lookahead, and therefore does not get consumed",,,,,
,,'}',,,Accept,,,,,,,,
,,,,,,,,,,,,,
,,,,,,,,,,,,,
,,,,,,,,,,,,,
,,,,,,,,,,,,,
,,,,,,,,,,,,,
,,,,,,,,,,,,,
Modifiers:,"[""public"" | (""internal"" [""protected""] | ""protected"" | ""private""] [""readonly"" | ""abstract""] [""partial""]","""public""","""readonly""","""internal""",Next,,,,,,,,
,,"""internal""","""protected""#1","""protected""#2",Next,,,,,,,,
,,"""protected""#1","""readonly""",,Next,,,,,,,,
,,"""protected""#2","""readonly""","""private""",Next,,,,,,,,
,,"""private""","""readonly""",&Empty#1,Next,,,,,,,,
,,&Empty#1,"""readonly""",,Next,,,,,,,,
,,"""readonly""","""partial""","""abstract""",Next,,,,,,,,
,,"""abstract""","""partial""",&Empty#2,Next,,,,,,,,
,,&Empty#2,"""partial""",,Next,,,,,,,,
,,"""partial""",,&Empty#3,Accept,,,,,,,,
,,&Empty#3,,,Accept,,,,,,,,
,,,,,,,,,,,,,
ObjType:,&Identifier { => ObjType $Identifier },,,,Accept,ObjType $Identifier ,,,,,,,
,,,,,,,,,,,,,
Params:,"(' ["",""; ObjType &Identifier]* [""params"" ObjType &Identifier ]')'",'(',,,,,,,,,,,
,,ObjType,,,,,,,,,,,
,,,,,,,,,,,,,
,,,,,,,,,,,,,
,,,,,,,,,,,,,
,,,,,,,,,,,,,
,,,,,,,,,,,,,
,,,,,,,,,,,,,
,,,,,,,,,,,,,
,,,,,,,,,,,,,
,,,,,,,,,,,,,
,,,,,,,,,,,,,
,,,,,,,,,,,,,
,,,,,,,,,,,,,
Qname:,…,,,,,,,,,,,,
,,,,,,,,,,,,,
,,,,,,,,,,,,,
Namespace:,['.'; &Indentifier]+ -> $$,Indentifier,,'.',&Empty,Append,,,,,,,
,,Symbol,'.',&Indentifier,,Append,,,,,,,
,,&Empty,,,,Accept,$$,,,,,,
